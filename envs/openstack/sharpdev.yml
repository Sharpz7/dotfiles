# https://github.com/Sharpz7/dotfiles/blob/main/envs/openstack/sharpdev.yml

version: 1

# envfile: env/.env

# https://docs.opendev.org/opendev/infra-manual/latest/sandbox.html
# https://docs.opendev.org/opendev/infra-manual/latest/developers.html

scripts:
  init: |
    echo "*" > ./env/.gitignore
    touch ./env/.env

    mkdir -p .vscode
    cat <<END > .vscode/settings.json
    {
        "[python]": {
            "editor.formatOnSave": false,
            "editor.defaultFormatter": null,
            "editor.codeActionsOnSave": {
                "source.organizeImports": false,
                "source.fixAll": false,
            }
        },
    }
    END

    echo "*" > ./.vscode/.gitignore

  cursor: |
    mkdir -p .cursor
    mkdir -p .cursor/rules
    cat <<END > .cursor/rules/openstack.mdc
    @.cursor/rules/quick-rules.md
    Always follow OpenStack Python style guidelines for code generation.
    END
    curl https://raw.githubusercontent.com/SeanMooney/openstack-ai-style-guide/refs/heads/master/docs/quick-rules.md > .cursor/rules/quick-rules.md

    # add a gitignore for .cursor
    echo "*" > .cursor/.gitignore

  key: |
    if [ ! -f ~/.ssh/id_rsa ]; then
      touch ~/.ssh/id_rsa
      chmod 600 ~/.ssh/id_rsa
      nano ~/.ssh/id_rsa
    fi

    # if file does not exist (sh)
    if [ ! -f ~/.ssh/config ]; then
      touch ~/.ssh/config
      echo "Host review.opendev.org" >> ~/.ssh/config
      echo "  ForwardAgent yes" >> ~/.ssh/config
    fi

  setup: |
    pip install --user git-review

    echo "*" > ./env/.gitignore
    git config --add gitreview.username "adamcarthur"
    git config user.name "adamcarthur"
    git config user.email "adam@mcaq.me"
    git config core.editor "nano"
    git review -s

  ssh-agent: |
    sharpdev kill-agents
    output=$(ssh-agent)
    echo $output > ./env/agent-init.sh
    chmod +x ./env/agent-init.sh
    . ./env/agent-init.sh
    ssh-add

    echo "Run this script to see agent info: [. ./env/agent-init.sh]"

  kill-agents: |
    sudo pkill ssh-agent

  # git clone https://opendev.org/opendev/sandbox
  test: |
    git checkout -b testing
    echo "# Hello World" > adam.md
    git add .
    git commit -m "Initial commit from Adam"
    git review -R

    # For Topic
    # git review -R -t testing

  git_config: |
    git config --list --show-origin

  commit: |
    git add .
    git commit -s -m $_ARG1

  review: |
    git review

  latest: |
    git remote update
    git checkout master
    git reset --hard origin/master

  squash: |
    git checkout master
    git pull origin master
    git checkout TOPIC-BRANCH
    git rebase -i master

  check: |
    tox -e pep8
    tox -e py3
